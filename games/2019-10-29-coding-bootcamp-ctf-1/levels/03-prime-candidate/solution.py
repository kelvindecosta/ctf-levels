"""
DATA : A set of 1 thousand randomly generated numbers between 1 and 1 million
"""
DATA = {20481, 403458, 116740, 923654, 442375, 8204, 342028, 495632, 532497, 53267, 755732, 571413, 903190, 137236, 927768, 880661, 423957, 530459, 417822, 763935, 235553, 997410, 84003, 765991, 6183, 604202, 61484, 221232, 442418, 366644, 247862, 421948, 788540, 747582, 340036, 63557, 651333, 397383, 858180, 497733, 714826, 108619, 387152, 936022, 919642, 784476, 235613, 190557, 876639, 229472, 299106, 612452, 620645, 946280, 450665, 184431, 735344, 120945, 653426, 977018, 245885, 260223, 258176, 346240, 649343, 721025, 874629, 426118, 663687, 891015, 845965, 344208, 772247, 256151, 487576, 735393, 348322, 821415, 911528, 71850, 280747, 32939, 426157, 370859, 903343, 315569, 565428, 673972, 696504, 856254, 200897, 624835, 432323, 981189, 803014, 407747, 987336, 428232, 352458, 612555, 479435, 354509, 121036, 975051, 368846, 182481, 397520, 450771, 2261, 850133, 360664, 307420, 633053, 803036, 665823, 729309, 397543, 508137, 401642, 116971, 329964, 499949, 850156, 489711, 860395, 778481, 913649, 24814, 284914, 565493, 772344, 274681, 518393, 243963, 59643, 649469, 49406, 397563, 798976, 661760, 569606, 512263, 102665, 702730, 162061, 28942, 770320, 901394, 223509, 127254, 825623, 807190, 233753, 674080, 114976, 76067, 669988, 422180, 61734, 194852, 645415, 442667, 475436, 457008, 149812, 926005, 174390, 655675, 999745, 379202, 584005, 276808, 473418, 565580, 495949, 264526, 512341, 303446, 553307, 356700, 586076, 815452, 133471, 672098, 477539, 510312, 903530, 641391, 346480, 209268, 565622, 844152, 889209, 588154, 921982, 244099, 104838, 391560, 999817, 434573, 903566, 463247, 543119, 387478, 375191, 545176, 272794, 170396, 668062, 887205, 250281, 426, 356779, 686509, 248238, 63919, 121264, 723379, 737716, 283061, 604597, 616887, 461240, 967097, 500150, 833981, 240063, 715199, 463299, 403907, 72133, 776647, 201159, 481742, 158158, 571859, 199123, 936407, 631263, 846306, 160228, 946661, 225773, 213488, 610806, 45562, 963067, 539132, 958973, 942591, 846336, 580098, 903683, 580100, 657925, 590342, 133637, 160264, 246278, 160266, 897547, 870915, 31245, 162317, 96782, 320016, 84492, 295443, 457240, 608793, 807452, 956960, 219685, 440870, 963111, 59943, 563751, 291370, 498217, 496172, 139817, 307758, 33327, 240175, 258608, 117302, 948792, 942651, 170556, 74300, 117309, 397888, 617025, 313922, 854597, 234054, 418374, 905799, 924232, 967243, 764492, 76366, 440553, 229975, 600, 299608, 172635, 98908, 297572, 524903, 971367, 739946, 727660, 994968, 490095, 713329, 475764, 729717, 459382, 612983, 823928, 467575, 950907, 813695, 260736, 764545, 875137, 156295, 199313, 291477, 82583, 840347, 252573, 6815, 107176, 619177, 735912, 420522, 690856, 748207, 352945, 969396, 721591, 881335, 379581, 572093, 256703, 230081, 498370, 113347, 82628, 133828, 342723, 950984, 41673, 74442, 754378, 770764, 889546, 459470, 928464, 324309, 758491, 856796, 588509, 449246, 928478, 256737, 625381, 703205, 772841, 221942, 940791, 598783, 310017, 922370, 805636, 971525, 443144, 635657, 125711, 596751, 998161, 992018, 256788, 463639, 670488, 199449, 400157, 131870, 103199, 484126, 584483, 832292, 623399, 420652, 594732, 592684, 690994, 371508, 906037, 944957, 799551, 242496, 713537, 607041, 277313, 934728, 346955, 435021, 408397, 742226, 254802, 426834, 43861, 985938, 752471, 267096, 224083, 88915, 818012, 996189, 588638, 998244, 246630, 41833, 187242, 848750, 797550, 291705, 781178, 277371, 33660, 457593, 965499, 918399, 72575, 471933, 846722, 224131, 672643, 660357, 873350, 222087, 285578, 230284, 146317, 392078, 822158, 625551, 697230, 154512, 37779, 322452, 732053, 529299, 699288, 787353, 449434, 201630, 504741, 695206, 332712, 527277, 578479, 48051, 228276, 701365, 986043, 805820, 291774, 709571, 666564, 783301, 187331, 699331, 705478, 560070, 875468, 754640, 107474, 142292, 560087, 381914, 111580, 668637, 431072, 97252, 594917, 166890, 199660, 146414, 447471, 418802, 787444, 250868, 676857, 455674, 576511, 785409, 113669, 173062, 25612, 70675, 795668, 76820, 777237, 166932, 574486, 330777, 91162, 273433, 754718, 701475, 101415, 934954, 943768, 398383, 717871, 275505, 805935, 988211, 78899, 957493, 66614, 238652, 508994, 388163, 889922, 932932, 949315, 730181, 838723, 439376, 883795, 920660, 556117, 607315, 838743, 562263, 72793, 574554, 224346, 830556, 173149, 95326, 902238, 943200, 562276, 906340, 914534, 347236, 203881, 816233, 582766, 488558, 359537, 15475, 154740, 74871, 566391, 220282, 414851, 834693, 328839, 693385, 982154, 685198, 980111, 564366, 752788, 46229, 111765, 263320, 949402, 689306, 636060, 976032, 562337, 844963, 443556, 292005, 214182, 820392, 787626, 318636, 687278, 27825, 259250, 40116, 162999, 261304, 894142, 287937, 652484, 79047, 402631, 464072, 314570, 326859, 251084, 455885, 900301, 920783, 750801, 943314, 328915, 974037, 605398, 568533, 279767, 163033, 523482, 165081, 343255, 580829, 636131, 72934, 220393, 279787, 292076, 834795, 351471, 277747, 572662, 419067, 765180, 179452, 398592, 869635, 101640, 107787, 419094, 908574, 58656, 490786, 415012, 480548, 439590, 578857, 292137, 443693, 531757, 898349, 509232, 509233, 836913, 120117, 185653, 824630, 695613, 869694, 730430, 695614, 816450, 60739, 623940, 974147, 628039, 290121, 587081, 3403, 171340, 48459, 548178, 54616, 720222, 81248, 52579, 597348, 777573, 634211, 482663, 445799, 408931, 484715, 927083, 906605, 642413, 941424, 671089, 517489, 902513, 7541, 648565, 238969, 988537, 941436, 914813, 740735, 564608, 791938, 224644, 470406, 750982, 894344, 25991, 335240, 279947, 365963, 427399, 791953, 771477, 451990, 974231, 918939, 906652, 382365, 929182, 617890, 843171, 912805, 271783, 847273, 478635, 708012, 277933, 757169, 52658, 968115, 105908, 169397, 935352, 902593, 712132, 536005, 355785, 263627, 765389, 822734, 46543, 964048, 329165, 783827, 665047, 169431, 984540, 785885, 423390, 56803, 767461, 134629, 681447, 916965, 413161, 681454, 738798, 529904, 978414, 273904, 603635, 138740, 841205, 962038, 558583, 167415, 286194, 52728, 798208, 97794, 230915, 779780, 665096, 603656, 398859, 140815, 261651, 706074, 861723, 314911, 577058, 165410, 611879, 9768, 988713, 22057, 529960, 146992, 650811, 790076, 925246, 566848, 67137, 349760, 278083, 759360, 278086, 992843, 368204, 710220, 691799, 638552, 753241, 439899, 382555, 679515, 935519, 71263, 431713, 376418, 493153, 700006, 970343, 353895, 724587, 112236, 312943, 855663, 208497, 26226, 964210, 476787, 28277, 130680, 396923, 810621, 947838, 771712, 872065, 808578, 97924, 288390, 3718, 534151, 568970, 138891, 554635, 241293, 155288, 452249, 753306, 790171, 145052, 73373, 509598, 933534, 40606, 323233, 978594, 908960, 188074, 685744, 992949, 5815, 612025, 442043, 208574, 220862, 677569, 763588, 380613, 145096, 536266, 487116, 754214, 917203, 83668, 89815, 276184, 249566, 581344, 30435, 401125, 329446, 659177, 222956, 231149, 485101, 990958, 1774, 874225, 632557, 444152, 624378, 444155, 638721, 435971, 28419, 874245, 534278, 12039, 694023, 777992, 65291, 206607, 331536, 464657, 202512, 177935, 902932, 67349, 233239, 892698, 69404, 317213, 984862, 313119, 579365, 696102, 876326, 970536, 657194, 409387, 923436, 487214, 683824, 372529, 743216, 702259, 300851, 216882, 261942, 53046, 687927, 704315, 839483, 921407, 704319, 554817, 546623, 800582, 788296, 425801, 130890, 167754, 292684, 540491, 298831, 712527, 311121, 231252, 888663, 278362, 255837, 708447, 896866, 532324, 20325, 259948, 563055, 481142, 532343, 845688, 882555, 325499, 85885, 556927, 692095, 556933, 229259, 810892, 61325, 872336, 114577, 192402, 700306, 10140, 608159, 352162, 126883, 788388, 884643, 208803, 565159, 581543, 927658, 845743, 792496, 784310, 477111, 894906, 339903, 591808, 731077, 98247, 20423, 640968, 511946, 85966, 448463, 716752, 165841, 952274, 137175, 331738, 88026, 980958, 290783, 802785, 823268, 210923, 970734, 337903, 362480, 702449, 493555, 471030, 278518, 720893, 542718}

# Keep track of all primes, so that detecting non-primes is quick
PRIMES = set()

def prime(n):
    # Trivial
    if n <= 1:
        return False

    # If it is a prime
    if n in PRIMES:
        return True

    # If there are prime that are tracked
    if len(PRIMES) > 0:
        for p in PRIMES:
            if n % p == 0:
                prime(n // p)
                return False
                
        PRIMES.add(n)
        return True

    # Iterate over all numbers from 0 to n-1 
    # Instead of stopping after floor(sqrt(n)), the loop continues
    # If n were actually a prime then all primes less than n will be included
    for i in range(n):
        # Perform the prime check for that number
        if prime(i):
            if n % i == 0:
                prime(n // i)
                return False

    PRIMES.add(n)
    return True


if __name__ == "__main__":
    for d in DATA:
        prime(d)
    
    print("CTF{" + str(max(PRIMES)) + "}")